Personalizar cualquier terminal que uses para comodidad 

--> git init
para iniciar un repositorio de git.

--git add "archivo o .(punto = agrega todo)"
Sirve para agragar los archivos a stagin area previo al commit

-->git status
Estado del repositorio(si faltan archivos para agragar o que se modificaron)

-->git commit -m (mensaje) "Mensaje del commit"
Sirve para ejecutar un commit "Una nueva rama" en el proyecto.

--> git clone 'liga del repositorio'
Es para copiar un proyecto de github, si piensas hacerlo por SSH debes tener la clave del mismo SSH. Sino
dara error, y si ya estas trabajando en proyectos ve a la seccion en SSH agent para trabajar mas tranquilo.
Nota. --> La pagina del SSH agent esta en como crear las claves SSH de gihub <--

-->git config --global (configuraci칩n global) user.email "Email"(para establecer un correo en los commits)
-->git config --global (configuraci칩n global) user.name "Nombre"(para establecer un nombre en los commits)
Ambos comandos sirven para configurar algunos aspectos de Git

-->git log
Nos da un peque침o resumen de los comit que se han hecho. Agregar "--oneline" acorta la informacion de 
los commit

-->git checkout 'a22dc21'
Sirve para volver a una version anterior del proyecto(Se tienen que poner los primeros numeros 
identificadores del hash del commit), se puede seguir haciendo checkout despues del primero, pero hay que
tener precaucion y ver en que rama estas.

--> git reset 'hash commit'
Devuelve el commit que seleccionas y los cambios hechos.

--> git reset --hard 'hash commit'
Borra el commit seleccionado

--> rm 'archivo'
Borras archivo pero permanecen en la stagin area

--> git restore 'archivo'
Recupera el archivo que esta borrado del directorio.

Para generar claves ssh en gihub debes buscar la pagina oficial de github que te indica como hacerlo.
De momento yo estoy usando el correo de "cheche.2001.jam@gmail.com" y la contrase침a sera "combatarms"
SHA256:odsKvQK+AmM3m4woXGObVIoyw+OFzOh8bxqKZkC2hV4 cheche.2001.jam@gmail.com
The key's randomart image is:
+--[ED25519 256]--+
|                 |
|                 |
|  .     .        |
| + E . . .       |
|O * o . S        |
|O@.X . o         |
|@=XoO o .        |
|=OoBoo o         |
|=ooo+oo          |
+----[SHA256]-----+

--> git push -u (hace lo mismo que '--set-upstream') oringin 'rama'
Este comando permite "mandar" o "subir" los cambios al repositorio
Nota. ---> Si hay algun inconveniente, revisa primero las claves SSH <--

--> git checkout -b 'nombre rama'
El comando nos permite crear una nueva rama del proyecto para trabajar